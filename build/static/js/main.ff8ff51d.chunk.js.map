{"version":3,"sources":["types/types.js","reducers/CitasReducer.js","reducers/ValidarFormReducer.jsx","reducers/index.jsx","store/Store.jsx","actions/FormAction.jsx","components/AgregarCitas.jsx","hook/useForm.jsx","actions/ActionCita.jsx","components/ListarCitas.jsx","App.js","index.js"],"names":["types","initialState","citas","error","combineReducers","state","action","type","payload","filter","cita","id","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ValidarAction","estado","AgregarCitas","useState","formValue","setValues","target","name","value","useForm","nombre","fecha","hora","sintomas","formValues","handleInputChange","reset","dispatch","useDispatch","AgregarCita","ActionCita","validarFormulario","useSelector","console","log","className","onSubmit","e","preventDefault","trim","uuid","placeholder","autoComplete","onChange","ListarCitas","agenda","scope","map","onClick","App","Store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff8ff51d.chunk.js","sourcesContent":["export const types = {\n    agregar: 'AGREGAR_CITA',\n    borrar: 'BORRAR_CITA',\n    validar: 'VALIDAR_FORMULARIO'\n}","import {types} from '../types/types'\n\nconst initialState = {\n    citas: []\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case types.agregar:\n            return {\n                ...state,\n                citas: [...state.citas, action.payload]\n            }\n\n        case types.borrar:\n            return {\n               ...state,\n               citas: state.citas.filter(cita => cita.id !== action.payload)\n            }\n\n        default:\n            return state;\n    }\n}","\nimport {types} from '../types/types'\n\nconst initialState = {\n    error: false\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case types.validar: \n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport CitasReducer from '../reducers/CitasReducer';\nimport ValidarFormReducer from '../reducers/ValidarFormReducer';\n\nexport default combineReducers ({\n    citas: CitasReducer,\n    error: ValidarFormReducer\n})","import React from 'react';\nimport {createStore} from 'redux';\nimport reducer from '../reducers';\n\nconst store = createStore(\n    reducer,\n\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","\nimport {types} from '../types/types'\n\nconst ValidarAction = (estado) => {\n    return {\n        type: types.validar,\n        payload: estado\n    }\n}\nexport default ValidarAction\n","import React from 'react'\nimport { useForm } from '../hook/useForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ActionCita } from '../actions/ActionCita'\nimport ValidarAction from '../actions/FormAction'\nimport uuid from 'react-uuid'\n\nconst AgregarCitas = () => {\n    const [formValues, handleInputChange, reset] = useForm({\n        nombre: '',\n        fecha: '',\n        hora: '',\n        sintomas: ''\n    });\n\n    const { nombre, fecha, hora, sintomas } = formValues;\n\n    const dispatch = useDispatch();\n    const AgregarCita = (cita) => { dispatch(ActionCita(cita)) }\n\n    const validarFormulario = (estado) =>{ dispatch(ValidarAction(estado)) }\n    const error = useSelector((state)=>state.error)\n    console.log(error)\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n       //Limpar campos\n        reset();\n\n        //Validar campo\n    if( nombre.trim() === '' || fecha.trim() === '' || hora.trim() === '' || sintomas.trim() === '' ) {\n        validarFormulario(true);\n        return;\n    }\n\n    validarFormulario(false);\n\n        AgregarCita({\n            id:uuid(),\n            nombre,\n            fecha,\n            hora,\n            sintomas\n        })\n    }\n\n    return (\n        <div className=\"card mt-5\">\n            <div className=\"card-body\">\n                <form onSubmit={handleSubmit}>\n                    <h1> Agregar Citas</h1>\n                    <hr />\n\n                    <div className=\"orm-group row\">\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre</label>\n                        <div className=\"mb-4 mb-lg-0\">\n                            <input\n                                type=\"text\"\n                                name=\"nombre\"\n                                className=\"form-control\"\n                                placeholder=\"Tu nombre\"\n                                autoComplete=\"off\"\n                                value={nombre}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row mt-3\">\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Fecha</label>\n                        <div className=\"form-group col-sm-8 col-lg-4\">\n                            <input\n                                type=\"date\"\n                                name=\"fecha\"\n                                className=\"form-control\"\n                                autoComplete=\"off\"\n                                value={fecha}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">hora</label>\n                        <div className=\"form-group col-sm-8 col-lg-4\">\n                            <input\n                                type=\"time\"\n                                name=\"hora\"\n                                className=\"form-control\"\n                                autoComplete=\"off\"\n                                value={hora}\n                                onChange={handleInputChange}\n\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Sintomas</label>\n                        <div className=\"form-group\">\n                            <textarea\n                                name=\"sintomas\"\n                                className=\"form-control\"\n                                autoComplete=\"off\"\n                                value={sintomas}\n                                onChange={handleInputChange}>\n\n                            </textarea>\n                        </div>\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Guardar\n                    </button>\n                </form>\n                \n                { error.error  ? <div className=\"alert alert-danger text-center p2\">Todos los campos son obligatorios</div> : null}\n           \n              </div>\n        </div>\n    )\n}\n\nexport default AgregarCitas","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n\n    const [formValue, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...formValue,\n            [target.name]: target.value\n        });\n    }\n\n    return [formValue, handleInputChange, reset];\n}","import {types} from '../types/types'\n\nexport  const ActionCita = (cita) => {\n    return {\n        type: types.agregar,\n        payload: cita\n    }\n}\n\nexport  const BorrarActionCita = (id) => {\n    return {\n        type:types.borrar,\n        payload: id\n    }\n}","import React from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BorrarActionCita } from '../actions/ActionCita'\n\nconst ListarCitas = () => {\n\n    const agenda = useSelector((state) => state.citas)\n    const dispatch = useDispatch()\n    console.log(agenda)\n\n\n    return (\n        <div className=\"card mt-5\">\n            <div className=\"card-body\">\n                <h2 className=\"card-title text-center\">Agenda</h2>\n\n                <div className=\"lista-citas\">\n\n                    <table className=\"table\">\n                        <thead>\n\n                            <tr>\n                                <th scope=\"col\">Nombre</th>\n                                <th scope=\"col\">Fecha</th>\n                                <th scope=\"col\">Hora</th>\n                                <th scope=\"col\">Fractura</th>\n                                <th scope=\"col\">Acción</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {agenda.citas.map(cita => (\n                                <tr key={cita.id}>\n                                    <td>{cita.nombre}</td>\n                                    <td>{cita.fecha}</td>\n                                    <td>{cita.hora}</td>\n                                    <td>{cita.sintomas}</td>\n                                    <td><button className=\"btn btn-danger\"\n                                        onClick={() => dispatch(BorrarActionCita(cita.id))}>\n                                        Borrar &times;\n                                        </button>\n                                    </td>\n                                </tr>\n\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div >\n        </div >\n    )\n}\n\nexport default ListarCitas","import Store from './store/Store'\nimport { Provider } from 'react-redux'\nimport AgregarCitas from './components/AgregarCitas';\nimport ListarCitas from './components/ListarCitas';\n\nfunction App() {\n  return (\n    <Provider store={Store}>\n      <div className=\"container text-center\">\n        <header><h1>Spa</h1></header>\n        <div className=\"row mt-3\">\n          <div className=\"col-md-6\">\n            < AgregarCitas />\n          </div>\n          <div className=\"col-md-6\">\n            < ListarCitas />\n          </div>\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/App.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}