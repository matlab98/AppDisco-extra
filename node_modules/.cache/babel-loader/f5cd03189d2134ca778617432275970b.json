{"ast":null,"code":"import _defineProperty from\"/Users/hilbrakaku/Cloud/OneDrive/Academia Geek/Workshop/AppDisco/AppDisco-extra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/hilbrakaku/Cloud/OneDrive/Academia Geek/Workshop/AppDisco/AppDisco-extra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/hilbrakaku/Cloud/OneDrive/Academia Geek/Workshop/AppDisco/AppDisco-extra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';export var useForm=function useForm(){var initialState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),formValue=_useState2[0],setValues=_useState2[1];var reset=function reset(){setValues(initialState);};var handleInputChange=function handleInputChange(_ref){var target=_ref.target;setValues(_objectSpread(_objectSpread({},formValue),{},_defineProperty({},target.name,target.value)));};return[formValue,handleInputChange,reset];};","map":{"version":3,"sources":["/Users/hilbrakaku/Cloud/OneDrive/Academia Geek/Workshop/AppDisco/AppDisco-extra/src/hook/useForm.jsx"],"names":["useState","useForm","initialState","formValue","setValues","reset","handleInputChange","target","name","value"],"mappings":"mlBAAA,OAASA,QAAT,KAAyB,OAAzB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAuB,IAAtBC,CAAAA,YAAsB,2DAAP,EAAO,eAEXF,QAAQ,CAACE,YAAD,CAFG,wCAEnCC,SAFmC,eAExBC,SAFwB,eAI1C,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChBD,SAAS,CAACF,YAAD,CAAT,CACH,CAFD,CAIA,GAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,CACtCH,SAAS,gCACFD,SADE,wBAEJI,MAAM,CAACC,IAFH,CAEUD,MAAM,CAACE,KAFjB,GAAT,CAIH,CALD,CAOA,MAAO,CAACN,SAAD,CAAYG,iBAAZ,CAA+BD,KAA/B,CAAP,CACH,CAhBM","sourcesContent":["import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n\n    const [formValue, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...formValue,\n            [target.name]: target.value\n        });\n    }\n\n    return [formValue, handleInputChange, reset];\n}"]},"metadata":{},"sourceType":"module"}