{"ast":null,"code":"import _toConsumableArray from\"/Users/hilbrakaku/Cloud/OneDrive/Academia Geek/Workshop/AppDisco/AppDisco-extra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/hilbrakaku/Cloud/OneDrive/Academia Geek/Workshop/AppDisco/AppDisco-extra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{types}from'../types/types';var initialState={citas:[]};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.agregar:return _objectSpread(_objectSpread({},state),{},{citas:[].concat(_toConsumableArray(state.citas),[action.payload])});case types.borrar:return _objectSpread(_objectSpread({},state),{},{citas:state.citas.filter(function(cita){return cita.id!==action.payload;})});default:return state;}}","map":{"version":3,"sources":["/Users/hilbrakaku/Cloud/OneDrive/Academia Geek/Workshop/AppDisco/AppDisco-extra/src/reducers/CitasReducer.js"],"names":["types","initialState","citas","state","action","type","agregar","payload","borrar","filter","cita","id"],"mappings":"mZAAA,OAAQA,KAAR,KAAoB,gBAApB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAE,EADU,CAArB,CAIA,cAAe,WAAwC,IAA9BC,CAAAA,KAA8B,2DAAtBF,YAAsB,IAARG,CAAAA,MAAQ,2CACnD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKL,CAAAA,KAAK,CAACM,OAAX,CACI,sCACOH,KADP,MAEID,KAAK,8BAAMC,KAAK,CAACD,KAAZ,GAAmBE,MAAM,CAACG,OAA1B,EAFT,GAKJ,IAAKP,CAAAA,KAAK,CAACQ,MAAX,CACI,sCACML,KADN,MAEGD,KAAK,CAAEC,KAAK,CAACD,KAAN,CAAYO,MAAZ,CAAmB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYP,MAAM,CAACG,OAAvB,EAAvB,CAFV,GAKJ,QACI,MAAOJ,CAAAA,KAAP,CAdR,CAgBH","sourcesContent":["import {types} from '../types/types'\n\nconst initialState = {\n    citas: []\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case types.agregar:\n            return {\n                ...state,\n                citas: [...state.citas, action.payload]\n            }\n\n        case types.borrar:\n            return {\n               ...state,\n               citas: state.citas.filter(cita => cita.id !== action.payload)\n            }\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}